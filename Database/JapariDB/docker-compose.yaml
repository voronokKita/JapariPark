# A monolithic database system of Japari Park - PostgreSQL
# `docker compose up --detach --build`
#
name: japaripark-database


networks:
  data_overlay:
    driver: overlay
    attachable: true


secrets:
  japari_data_build_pass:
    file: ./secrets/.docker-build.secret

  japari_data_superuser_pass:
    file: ./secrets/.superuser_pass.secret

  japari_data_admin_pass:
    file: ./secrets/.admin_pass.secret

  japari_data_jservice_pass:
    file: ./secrets/.japari_service_pass.secret


services:
  japari_db:
    container_name: JapariDB
    stdin_open: true
    tty: true
    build:
      context: .
      secrets:
        - japari_data_build_pass
    image: japari_db
    volumes:
      - type: bind
        source: ./mnt-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./mnt-logs
        target: /JapariDB/logs
    secrets:
      - source: japari_data_superuser_pass
        target: /run/secrets/superuser_pass
        uid: '1000'
        gid: '70'
        mode: 400
      - source: japari_data_admin_pass
        target: /run/secrets/admin_pass
        uid: '1000'
        gid: '70'
        mode: 400
      - source: japari_data_jservice_pass
        target: /run/secrets/jservice_pass
        uid: '1000'
        gid: '70'
        mode: 400
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/superuser_pass
      - ADMIN_PASS_FILE=/run/secrets/admin_pass
      - JSERVICE_PASS_FILE=/run/secrets/jservice_pass
    # ports: 5432:5432
    networks:
      data_overlay:
        aliases:
          - japari-db.api
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U honeybot -d japari_park_default \
                           -h japari-db.api -p 5432 -t 5 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 2
      start_period: 20s
    restart: on-failure
    stop_grace_period: 10s
