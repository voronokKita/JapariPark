# Japari Park
#
# * Frontend
#   -- FriendsWeb
#   -- AccountsWeb
#
# * Backend
#   -- JapariService
#      -- Friends app
#      -- Accounts app
#
# `docker compose up --detach --build`
name: japaripark


networks:
  frontend_overlay:
    # aliases: japari-service.rest, friends-web.rest
    driver: overlay
    attachable: true

  friends_web_bridge:
    driver: bridge


secrets:
  japari_service_django_secret:
    file: ./Backend/JapariService/secrets/.django.secret

  japari_service_user_pass:
    file: ./Backend/JapariService/secrets/.docker-build.secret

  friends_web_user_pass:
    file: ./Frontend/FriendsWeb/secrets/.docker-build.secret


services:
  # JapariService: the main backend service
  japari_service:
    container_name: JapariService
    stdin_open: true
    tty: true
    build:
      context: ./Backend/JapariService/
      secrets:
        - japari_service_user_pass
    image: japari_service
    volumes:
      - type: bind
        source: ./Backend/JapariService/logs
        target: /JapariService/logs
    secrets:
      - source: japari_service_django_secret
        target: /JapariService/secrets/.django.secret
        uid: '1000'
        gid: '1000'
        mode: 0440
    ports:
      - target: 80
        published: 8000
        protocol: tcp
        mode: host
    networks:
      frontend_overlay:
        priority: 0
        aliases:
          - japari-service.rest
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://japari-service.rest/ping || exit 1"]
      interval: 3m
      timeout: 5s
      retries: 2
      start_period: 10s
    restart: on-failure
    stop_grace_period: 10s

  # FriendsWeb: Gunicorn server
  friends_web:
    container_name: FriendsWeb
    stdin_open: true
    tty: true
    build:
      context: ./Frontend/FriendsWeb/
      secrets:
        - friends_web_user_pass
    image: friends_web
    volumes:
      - type: bind
        source: ./Frontend/FriendsWeb/logs
        target: /FriendsWeb/logs
    networks:
      friends_web_bridge:
        aliases:
          - friends-web.app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://frinds-web.app/ping || exit 1"]
      interval: 3m
      timeout: 5s
      retries: 2
      start_period: 10s
    restart: on-failure
    stop_grace_period: 10s

  # FriendsWeb: NGINX reverse-proxy
  friends_web_nginx:
    container_name: FriendsWebNginx
    stdin_open: true
    tty: true
    build:
      context: ./Frontend/FriendsWeb/
      dockerfile: ./NGINX/Dockerfile
      secrets:
        - friends_web_user_pass
    image: friends_web_proxy
    volumes:
      - type: bind
        source: ./Frontend/FriendsWeb/logs/servers
        target: /FriendsWebNginx/logs
    ports:
      - target: 80
        published: 8080
        protocol: tcp
        mode: host
    networks:
      friends_web_bridge:
        priority: 1
        aliases:
          - friends-web.proxy
      frontend_overlay:
        priority: 0
        aliases:
          - friends-web.rest
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://friends-web.rest/proxy/ping/ || exit 1"]
      interval: 3m
      timeout: 5s
      retries: 2
      start_period: 10s
    restart: on-failure
    stop_grace_period: 10s
