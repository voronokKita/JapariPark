- Послушать лекции CS50-Web.
+ Сгенерировать gitignore.
- Подтянуть OOP.
+ Стиль кода; wemake-python-styleguide.
- Теория и примеры REST API.
- Теория асинхронных вычислений, AsyncIO.
+ Настроить IDE.
- Релизы, билды и пакеты.
- Глобальные переменные и настройки python, лицензии и прочее.


Git:
+ Hooks
- Ограничения на работу с master.


Документация:
+ База - как и чем.
+ reStructuredText
- doctest
+ Sphinx & autodoc + pycharm/tools
+ Автоматическая генерация.
- Размещение на GitHub Pages.


GitHub:
- CI/CD
+ Issues.
+ Branch protection rules.
+ Tags.
- Releases
- Packages


Фронтенд:
- NGINX
- Gunicorn
- Flask
- Docker Compose
- Tests


Бэкенд:
- Какой сервер?
- Django
- DRF
- Docker Compose
- Tests


База данных:
- Как масштабировать базу данных на множество осколков?
- Как избегать и обрабатывать ошибки и проблемы?
    * проблемы удалённой базы данных
    * проблемы высокой нагрузки
- Как склеить такую БД с движком и моделями Django?
- Какой сервер/сервера?
- Postgres
- Docker Compose
- Tests


Хранение медиа:
- Что это и как?
- CDN?
- Асинхронная подгрузка медиа во фронтенд?


Прочее:
- Теория систем мониторинга.





